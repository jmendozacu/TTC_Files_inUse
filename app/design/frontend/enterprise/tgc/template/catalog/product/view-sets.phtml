<?php
/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php
$_helper = $this->helper('catalog/output');
$_product = $this->getProduct();
$theme = $this->helper('ultimo');
$professors = (array)Mage::helper('tgc_catalog')->getProfessors($_product);
$professorImageHelper = Mage::helper('profs/image');
$setCoursesBlock = $this->getChild('sets_course_module');
if ($setCoursesBlock) {
    $setCoursesBlock->setProduct($_product);
}
?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>
<?php echo $this->getChildHtml('space_ad'); ?>
<div class="product-view sets-product">

<div class="product-container-with-shadow sets">
<form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
    <div class="clearfix">
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="course_id" value="<?php echo $_product->getCourseId() ?>" />
            <input type="hidden" name="product_sku" value="<?php echo $_product->getSku() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>

        <?php
        //Product collaterals
        $section = array();

        //Related products. $section['related'] is set only if related products (or replacement) exist
        $replaceRelated = $theme->getCfg('product_page/replace_related');
        if ($replaceRelated == 1) //don't replace with static block
        {
            if ($tmpHtml = trim($this->getChildHtml('catalog.product.related')))
                $section['related'] = $tmpHtml;
            //$section['related'] = trim($this->getChildHtml('catalog.product.related'));
        }
        elseif ($replaceRelated == 2) //if related is empty, replace with static block
        {
            if ($tmpHtml = trim($this->getChildHtml('catalog.product.related')))
                $section['related'] = $tmpHtml;
            else //related empty
                if ($tmpHtml = $this->getChildHtml('block_product_replace_related'))
                    $section['related'] = '<div class="block_product_replace_related">'. $tmpHtml .'</div>';
        }
        elseif ($replaceRelated == 3) //replace with static block
        {
            if ($tmpHtml = $this->getChildHtml('block_product_replace_related'))
                $section['related'] = '<div class="block_product_replace_related">'. $tmpHtml .'</div>';
        }

        //Up-sell products. $section['upsell'] is set only if up-sell products (or replacement) exist
        $replaceUpsell = $theme->getCfg('product_page/replace_upsell');
        if ($replaceUpsell == 1) //don't replace with static block
        {
            if ($tmpHtml = trim($this->getChildHtml('upsell_products')))
                $section['upsell'] = $tmpHtml;
            //$section['upsell'] = $this->getChildHtml('upsell_products');
        }
        elseif ($replaceUpsell == 2) //if upsell is empty, replace with static block
        {
            if ($tmpHtml = trim($this->getChildHtml('upsell_products')))
                $section['upsell'] = $tmpHtml;
            else //upsell empty
                if ($tmpHtml = $this->getChildHtml('block_product_replace_upsell'))
                    $section['upsell'] = '<div class="block_product_replace_upsell">'. $tmpHtml .'</div>';
        }
        elseif ($replaceUpsell == 3) //replace with static block
        {
            if ($tmpHtml = $this->getChildHtml('block_product_replace_upsell'))
                $section['upsell'] = '<div class="block_product_replace_upsell">'. $tmpHtml .'</div>';
        }

        //Assign related products to selected position
        if (isset($section['related']))
        {
            $relatedPosition = $theme->getCfg('product_page/related_position');
            //TODO:remove: $relatedPosition = 11;
            switch ($relatedPosition)
            {
                case 10:
                    $p['secondaryCol'][0] = $section['related'];
                    break;
                case 11:
                    $p['secondaryCol'][1] = $section['related'];
                    break;
                case 20:
                    $p['collatSecondaryCol'] = $section['related'];
                    break;
            }
        }



        //Width (in grid units) of product page sections
        $imgColUnits					= $theme->getCfg('product_page/image_column');
        $primaryColUnits				= $theme->getCfg('product_page/primary_column');
        $secondaryColUnits				= $theme->getCfg('product_page/secondary_column');
        $collatPrimaryColUnits			= $imgColUnits + $primaryColUnits;
        $collatSecondaryColUnits		= $secondaryColUnits;
        if (empty($secondaryColUnits))
        {
            $primaryColUnits			+= 12 - ($imgColUnits + $primaryColUnits);
            $collatPrimaryColUnits		= 9;
            $collatSecondaryColUnits	= 3;
        }

        //
        if (!isset($section['related']))
        {
            $collatPrimaryColUnits		= 12;
            $collatSecondaryColUnits	= 0;
        }

        //Grid classes
        $imgColGridClass				= 'grid12-5';
        $primaryColGridClass			= 'grid12-7';
        $secondaryColGridClass			= 'grid12-' . $secondaryColUnits;
        $collForUpsellClass	            = 'grid12-full';
        $collatPrimaryColGridClass		= 'grid12-' . $collatPrimaryColUnits;
        $collatSecondaryColGridClass	= 'grid12-' . $collatSecondaryColUnits;
        if (empty($secondaryColUnits))
        {
            $secondaryColGridClass	= '';
        }
        ?>

        <div class="product-img-column <?php echo $imgColGridClass; ?>">
            <div class="set-image-block">
                <div class="above_img_container">
                    <div class="left-part-top">
                        <?php if ($setCoursesBlock && ($courseCount = count($setCoursesBlock->getCourses()))): ?>
                            <span class="set-name">
                            <?php echo $this->__('Special %d Course Set', $courseCount); ?>
                        </span>
                        <?php endif; ?>
                        <span class="course-num">
                            Course No.&nbsp;
                            <?php echo $_product->getCourseId(); ?>
                        </span>
                    </div>
                </div>
                <?php
                $_img = '<img src="'.$this->helper('catalog/image')->init($_product, 'image')->constrainOnly(true)->keepAspectRatio(true)->keepFrame(false)->resize(800).'" width="400" alt="'.$this->escapeHtml($_product->getImageLabel()).'" title="'.$this->escapeHtml($_product->getImageLabel()).'" />';
                echo $_helper->productAttribute($_product, $_img, 'image');?>
            </div>
        </div>

        <div class="product-shop <?php echo $primaryColGridClass; ?>">

            <?php if ($_product->isSaleable() && $this->hasOptions()): ?>
                <?php if ($container2_html = $this->getChildChildHtml('container2', '', true, true)): ?>
                    <div class="box-additional <?php echo $collatPrimaryColGridClass; ?>">
                        <div class="container2-wrapper">
                            <?php echo $container2_html; ?>

                            <?php if ($addtoLinksHtml = $this->getChildHtml('addto')): //compare, wishlist, to friend ?>
                                <div class="action-box clearer">
                                    <?php echo $addtoLinksHtml; ?>
                                </div>
                            <?php endif; ?>
                        </div>
                    </div>
                <?php endif; ?>
            <?php endif; ?>



            <?php echo $this->getChildHtml('alert_urls'); //alerts ?>

            <?php if ($extrahint_html = $this->getChildHtml('extrahint')): //qty increments ?>
                <div class="extrahint-wrapper"><?php echo $extrahint_html; ?></div>
            <?php endif; ?>

            <?php /*<div class="product-type-data"><?php echo $this->getChildHtml('product_type_data'); ?></div>*/ ?>

            <?php echo $this->getTierPriceHtml(); //tier prices ?>

            <?php if (!$this->hasOptions()): //add to cart when no options ?>
                <?php if($_product->isSaleable()): ?>
                    <div class="add-to-box">
                        <?php echo $this->getChildHtml('addtocart') ?>
                    </div>
                <?php endif; ?>
                <?php echo $this->getChildHtml('extra_buttons') ?>
            <?php endif; ?>

            <?php if ($_product->isSaleable() && $this->hasOptions()): ?>
                <?php if ($container1_html = $this->getChildChildHtml('container1', '', true, true)): ?>
                    <div class="container1-wrapper"><?php echo $container1_html; ?></div>
                <?php endif; ?>
            <?php endif;?>


            <?php echo $this->getChildHtml('other'); ?>

            <?php if ($tmpHtml = $this->getChildHtml('block_product_primary_bottom')): ?>
                <div class="feature-wrapper top-border block_product_primary_bottom"><?php echo $tmpHtml; ?></div>
            <?php endif; ?>

            <?php if ($tmpHtml = $this->getChildHtml('product_primary_bottom_placeholder')): //Placeholder for extensions ?>
                <div class="feature-wrapper top-border"><?php echo $tmpHtml; ?></div>
            <?php endif; ?>

        </div> <!-- end: product-shop -->

    </div>
</form>
<script type="text/javascript">
	//<![CDATA[
	var userLoggedIn = <?php echo Mage::getSingleton('customer/session')->isLoggedIn()?"1":"0" ?>;
	var productAddToCartForm = new VarienForm('product_addtocart_form');
	productAddToCartForm.submit = function (button, url) {
	    if (this.validator.validate()) {
	        var form = this.form;
	        var oldUrl = form.action;

	        if (url) {
	            form.action = url;
	        }
	        var e = null;
	        try {

                if (typeof window.tgc_tealiumObj == "object" && typeof window.tgc_tealiumObj.addToCartEventLink == "function") {
                    var course_format_types = $('product_addtocart_form').getInputs('radio','media-format-radio');
                    var media_format = jQuery('div#media-format-radio div.format-block.active label span.format-label').text();
                    var product_id = window.utag_data.product_id;
                    var product_sku = window.utag_data.product_sku;
                    var price = jQuery('div#media-format-radio div.format-block.active label span.format-price').text();
                    price = price.trim().replace('$', '').replace('£', '');
                <?php if ($this->getProduct()->getTypeId() == 'configurable'): ?>
                    <?php $_children = $this->getProduct()->getTypeInstance(true)
                        ->getUsedProducts(null, $this->getProduct()); ?>
                    <?php $childCount = count($_children); ?>
                    var tealiumProducts = [
                        <?php $i = 1; foreach ($_children as $_child): ?>
                            {format: '<?php echo $_child->getAttributeText('media_format'); ?>', product_id: '<?php echo $_child->getCourseId(); ?>', product_sku: '<?php echo $_child->getSku(); ?>'}<?php if ($i < $childCount): ?>,<?php endif; ?>
                            <?php $i++; ?>
                            <?php endforeach; ?>
                    ];
                    for (i = 0; i < tealiumProducts.length; i++) {
                        if (tealiumProducts[i].format == media_format) {
                            product_id = tealiumProducts[i].product_id;
                            product_sku = tealiumProducts[i].product_sku;
                        }
                    }
                    <?php endif; ?>
                    if (window.tgc_tealiumObj.addToCartEventLink(media_format, product_id, product_sku, price)) {}
                }

	            new Ajax.Request(form.action,
	                {
	                    method: 'post',
	                    parameters: $(form.id).serialize(true),
	                    onSuccess: function (transport) {
	                        /*Element.hide('formLoader');*/
	                        $(document.body).scrollTo();
	                        var response = transport.responseText;
	                        var data = response.evalJSON();
	                        $H(data).each(function (dataSet) {
	                            if (dataSet.key === "messages") {
	                                $('messages_product_view').update(dataSet.value);
	                                $('messages_product_view').down('ul.messages li[class*="-msg"]').insert('<a class="close-button" rel="nofollow" href="javascript:void(0)">Close</a>').observe('click', function() {
	                                    this.up('.messages').hide();
	                                });
	                                jQuery('.add-to-cart-btn').addClass('added').html('<span><span>Added to cart</span></span>');
	                                jQuery('.product-pdp-recommended').show();
	                            } else if (dataSet.key === "minicart") {
	                                updateTopLinks();
	                            }
	                        });
	                    }/*,
	                    onLoading: function (request, json) {
	                        Element.show('formLoader');
	                    }*/,
	                    onFailure: function () {
	                        Element.hide('formLoader');
	                    }
	                });

	        } catch (e) {
	        }
	        this.form.action = oldUrl;
	        if (e) {
	            throw e;
	        }

	        /*if (button && button != 'undefined') {
	         button.disabled = true;
	         }*/
	    }
	}.bind(productAddToCartForm);

	productAddToCartForm.submitLight = function (button, url) {
	    if (this.validator) {
	        var nv = Validation.methods;
	        delete Validation.methods['required-entry'];
	        delete Validation.methods['validate-one-required'];
	        delete Validation.methods['validate-one-required-by-name'];
	        if (this.validator.validate()) {
	            if (url) {
	                this.form.action = url;
	            }
	            if (userLoggedIn) {
                    //this.form.submit();
                    try {

                        new Ajax.Request(this.form.action,
                            {
                                method: 'post',
                                parameters: $(this.form.id).serialize(true),
                                onSuccess: function (transport) {
                                    /*Element.hide('formLoader');*/
                                    $(document.body).scrollTo();
                                    var response = transport.responseText;
                                    var data = response.evalJSON();
                                    $H(data).each(function (dataSet) {
                                        if (dataSet.key === "messages") {
                                            $('messages_product_view').update(dataSet.value);
                                            $('messages_product_view').down('ul.messages li[class*="-msg"]').insert('<a class="close-button" rel="nofollow" href="javascript:void(0)">Close</a>').observe('click', function() {
                                                this.up('.messages').hide();
                                            });
                                            jQuery('.add-to-wishlist-btn').html('Added to wish list');
                                            jQuery('.product-pdp-recommended').show();
                                        } else if (dataSet.key === "minicart") {
                                            updateTopLinks();
                                        }
                                    });
                                }/*,
                             onLoading: function (request, json) {
                             Element.show('formLoader');
                             }*/,
                                onFailure: function () {
                                    Element.hide('formLoader');
                                }
                            });

                    } catch (e) {
                    }
	            } else {
	                $(document.body).scrollTo();

	                jQuery('.mobile-nav-trigger').click();
	                jQuery('.mob-sign-in').click();

	                loginForm = jQuery('.login-form-dropdown');
	                loginFormContainer = jQuery('.signed-out-container');
	                if (loginForm.css('display')=='block'){
	                    arrowDown(loginFormContainer);
	                }else{
	                    closeElementsHeader();
	                    arrowUp(loginFormContainer);
	                }
	                loginForm.toggle();
	                hideLoginForm = 0;
	            }
	        }
	        Object.extend(Validation.methods, nv);
	    }
	}.bind(productAddToCartForm);

	function updateTopLinks() {
	    jQuery.ajax({
	        type: 'POST',
	        url: globalHeader.updateLinksUrl,
	        success: function (data, textStatus, jqXHR) {
	            if (data['status'] == 'success') {
	                jQuery('div#mini-cart').html(data['cartHtml']);
	                jQuery('div#mini-wishlist').html(data['wishlistHtml']);
	            }
	        }
	    });
	}

     <!-- Code for custom selects -->
     jQuery(document).ready(function($) {
         $('.super-attribute-select').coreUISelect();
     });

	//]]>
</script>
</div>
    <div class="sets-course-module">
        <?php echo $setCoursesBlock ? $setCoursesBlock->toHtml() : ''; ?>
    </div>
</div> <!-- end: product-view -->

